%% 模拟数据分析
clc;
close all;
clear;
currentPath = fileparts(mfilename('fullpath'));
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%下面是需要设置的参数，本程序仅在此需要更改参数，其他地方不需要更改
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
useGUI = 0;
rpm = 420;
if useGUI
    datasPath = getDataPath();
    datasPath = uigetdir(datasPath,'模拟数据文件夹');
    if isempty(datasPath) || isnumeric(datasPath)
        return;
    end
    %检查一下，防止转速没有设置或设置错误
    rpmIndex = strfind(datasPath,'转');
    if ~isempty(rpmIndex)
        rpmText = datasPath(rpmIndex-3:rpmIndex-1);
        rpm=inputdlg('输入测点数据对应转速','转速输入',1,{rpmText});
    else
        rpm=inputdlg('输入测点数据对应转速','转速输入',1,{'420'});
    end
    rpm = str2num(rpm{1});
    prompt = {'采样率:'...
              ,'数据分段：如{1:19}'...
              ,'峰峰值计算区间'...
              ,'是否进行趋势纠正,0~10,0为不进行，大于零使用对应的多项式纠正'...
              };
    defaultVal = {'200'...
              ,'{1:19}'...
              ,'[0.7,1.0]'...
              ,'8'...
              };         
    answer = inputdlg(prompt,'基本参数输入',1,defaultVal);
    if size(answer,1) <= 0
        return;
    end
    Fs = eval(answer{1,1});
    simulationDataSection = eval(answer{2,1});
    calcPeakPeakValueSection = eval(answer{3,1});
    polyfitN = eval(answer{4,1});
    baseFrequency = rpm/60*2;%定义一个基准频率，若没有定义为nan，相应的倍频*2.56不能超过采样频率
    beforeAfterMeaPoint = nan;%[14,15];%定义抑制装置的进口出口的测点号，如果没有定义为nan
    allowDeviation = 0.5;%查找基准频率时的允许频率误差范围
    multFreTimes = 3;% 倍频次数
    semiFreTimes = 3;% 半倍频次数
    loadDataStartTime = nan;%如果想忽略前段数据，把这个设置为0.n，n为百分比
    loadDataEndTime = nan;%同上
    combinecfxpath = nan;%如果是分开进行的模拟数据，需要把这个设置为1，同时不能使用gui
else
    datasPath = 'D:\马屈杨\研究生\论文\share\【论文】缓冲罐接法研究\模拟数据\SurgeTank_InSideInOut_2TimesLength_5%\';%fullfile(currentPath,'北区实验数据\模拟\26米单容V=DV细化');
    simulationDataSection = {1:19};
    beforeAfterMeaPoint = nan;%[14,15];%定义抑制装置的进口出口的测点号，如果没有定义为nan
    Fs = 200;%1/0.005
    calcPeakPeakValueSection = [0.8,1.0];%用于标记计算峰峰值的区间，例如[0.7,0.9]，表示70%~90%区间计算峰峰值
    polyfitN = 8;%去趋势使用的多项式阶次
    baseFrequency = rpm/60*2;%定义一个基准频率，若没有定义为nan，相应的倍频*2.56不能超过采样频率
    allowDeviation = 0.5;%查找基准频率时的允许频率误差范围

    multFreTimes = 3;% 倍频次数
    semiFreTimes = 3;% 半倍频次数
    loadDataStartTime = nan;%如果想忽略前段数据，把这个设置为0.n，n为百分比
    loadDataEndTime = nan;%同上
    combinecfxpath = nan;%如果是分开进行的模拟数据，需要把这个设置为1，同时不能使用gui
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

simulationDataStruct = fun_processSimulationFile(datasPath...
            ,'fs',Fs...
            ,'section',simulationDataSection...
            ,'basefrequency',baseFrequency...
            ,'allowdeviation',allowDeviation...
            ,'multFreTimes',multFreTimes...
            ,'semiFreTimes',semiFreTimes...
            ,'beforeAfterMeaPoint',beforeAfterMeaPoint...
            ,'calcPeakPeakValueSection',calcPeakPeakValueSection...
            ,'combinecfxpath',combinecfxpath...
            ,'loadDataStartTime',loadDataStartTime...
            ,'loadDataEndTime',loadDataEndTime...
            ,'polyfitn',polyfitN...
            );
simulationDataStruct.input.dataPath = datasPath;
simulationDataStruct.input.rpm = rpm;
saveMatFilePath = fullfile(datasPath,'simulationDataStruct.mat');
save(saveMatFilePath,'simulationDataStruct');
 msgbox('计算完成');